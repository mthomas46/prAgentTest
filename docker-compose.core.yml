version: '3.8'

services:
  task-service:
    build:
      context: ./services/task-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=task_service
      - LOKI_SHUTDOWN_TOKEN=${LOKI_SHUTDOWN_TOKEN:-loki-secure-token-123}
      - BROKKR_TOKEN=${BROKKR_TOKEN:-brokkr-secure-token-123}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    networks:
      - backend

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=task_service
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1G
    networks:
      - backend

  ui-service:
    build:
      context: ./services/ui-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - TASK_SERVICE_URL=http://task-service:3000
      - LOKI_SHUTDOWN_TOKEN=${LOKI_SHUTDOWN_TOKEN:-loki-secure-token-123}
      - BROKKR_TOKEN=${BROKKR_TOKEN:-brokkr-secure-token-123}
    depends_on:
      task-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    networks:
      - backend

  heimdal:
    build:
      context: ./services/heimdal
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - TASK_SERVICE_URL=http://task-service:3000
      - UI_SERVICE_URL=http://ui-service:3002
      - LOKI_SHUTDOWN_TOKEN=${LOKI_SHUTDOWN_TOKEN:-loki-secure-token-123}
      - BROKKR_TOKEN=${BROKKR_TOKEN:-brokkr-secure-token-123}
    depends_on:
      - task-service
      - ui-service
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge 